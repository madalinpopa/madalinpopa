name: Build

on:
  push:
    branches:
      - dev

env:
  IMAGE_NAME: madalinpopa
  ENVIRONMENT: dev

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Development
    env:
      DJANGO_SETTINGS_MODULE: madalinpopa.settings.dev
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_HOST: ${{ secrets.DB_HOST }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and cache the build to registry
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          target: development
          push: true
          build-args: |
            DB_NAME=${{ env.DB_NAME }}
            DB_HOST=${{ env.DB_HOST }}
            DB_PASS=${{ env.DB_PASS }}
            DB_USER=${{ env.DB_USER }}
            SECRET_KEY=${{ env.SECRET_KEY }}
            ENVIRONMENT=${{ env.ENVIRONMENT }}
            DJANGO_SETTINGS_MODULE=${{ env.DJANGO_SETTINGS_MODULE }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:dev
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:dev
          cache-to: type=inline

  test-unit:
    needs: build
    runs-on: ubuntu-latest
    environment: Development
    env:
      DJANGO_SETTINGS_MODULE: madalinpopa.settings.dev
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_HOST: ${{ secrets.DB_HOST }}

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASS }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          target: development
          load: true
          build-args: |
            DB_NAME=${{ env.DB_NAME }}
            DB_HOST=${{ env.DB_HOST }}
            DB_PASS=${{ env.DB_PASS }}
            DB_USER=${{ env.DB_USER }}
            SECRET_KEY=${{ env.SECRET_KEY }}
            ENVIRONMENT=${{ env.ENVIRONMENT }}
            DJANGO_SETTINGS_MODULE=${{ env.DJANGO_SETTINGS_MODULE }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:dev
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:dev
          cache-to: type=inline

      - name: Make migrations
        run: |
          docker run --rm --network host \
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:dev \
          /bin/bash -c "python manage.py makemigrations && python manage.py migrate"

      - name: Run unit-tests
        run: |
          docker run --rm --network host \
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:dev \
          /bin/bash -c "python manage.py test tests.unit"
