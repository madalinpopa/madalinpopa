@use 'variables' as *;

@mixin respond-to($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
      // Prints a media query based on the value
      @media (min-width: map-get($breakpoints, $breakpoint)) {
        @content;
      }
    }

    // If the key doesn't exist in the map
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
  }

@mixin center(){
  margin-left: auto;
  margin-right: auto;
}

@mixin container($width: 100%, $padding: 1rem) {
    max-width: $width;
    padding-left: $padding;
    padding-right: $padding;
}

@mixin container-sm($padding: 1rem) {
    @include container(649px, $padding);
    @include center();
    width: 100%;
}

@mixin container-md($padding: 1rem) {
    @include container(768px, $padding);
    @include center();
    width: 100%;
}

@mixin container-lg($padding: 1rem) {
    @include container(1024px, $padding);
    @include center();
    width: 100%;
}

@mixin container-xl($padding: 1rem) {
    @include container(1280px, $padding);
    @include center();
    width: 100%;
}

@mixin container-2xl($padding: 1rem) {
    @include container(1536px, $padding);
    @include center();
    width: 100%;
}

@mixin bottom-shadow($x: 0, $y: 2px, $blur: 10px, $color: rgba(0, 0, 0, 0.15)) {
    box-shadow: $x $y $blur $color;
}
